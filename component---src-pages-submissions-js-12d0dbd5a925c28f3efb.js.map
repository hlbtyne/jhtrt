{"version":3,"sources":["webpack:///./src/components/ProjectsSection/ProjectsSection.js","webpack:///./src/pages/submissions.js","webpack:///./src/images/4.png","webpack:///./src/components/TextSection/TextSection.js"],"names":["ProjectsContainer","styled","div","Project","StyledVideo","iframe","ProjectsSection","projects","projectsData","map","project","RichText","content","researcher_name","project_date","project_description","length","paragraph","video_url","width","height","src","allow","allowfullscreen","query","SubmissionsPage","data","title","prismic","page","text","page_text","projectsTitle","body1","primary","past_projects_title","fields","Navbar","HeaderSection","imageSrc","image","PageContent","TitleSection","titleData","TextSection","textData","Footer","module","exports","TextContainer","Paragraph","paragraphs"],"mappings":"0TAKaA,EAAoBC,IAAOC,IAAV,yFAAGD,CAAH,gIAYjBE,EAAUF,IAAOC,IAAV,+EAAGD,CAAH,iPAePG,EAAcH,IAAOI,OAAV,mFAAGJ,CAAH,kCAKXK,EAAkB,SAAC,GAAsB,IAE9CC,EAF6C,EAAnBC,aAEFC,KAAI,SAAAC,GAAO,OACvC,kBAACP,EAAD,KACE,kBAACQ,EAAA,EAAD,CAAUC,QAASF,EAAQG,gBAAgB,KAC1CH,EAAQI,cACP,kBAACH,EAAA,EAAD,CAAUC,QAASF,EAAQI,aAAa,KAEzCJ,EAAQK,oBAAoBC,QAC3BN,EAAQK,oBAAoBN,KAAI,SAAAQ,GAAS,OAAI,kBAACN,EAAA,EAAD,CAAUC,QAASK,OAEhEP,EAAQQ,WACP,kBAACd,EAAD,CACCe,MAAM,OACNC,OAAO,MACPC,IAAKX,EAAQQ,UACbI,MAAM,0EACNC,iBAAe,QAKvB,OACI,kBAACvB,EAAD,KACGO,I,YCjDIiB,EAAK,qrBAqCLC,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BC,EAAQD,EAAKE,QAAQC,KAAKF,MAAM,GAChCG,EAAOJ,EAAKE,QAAQC,KAAKE,UACzBC,EAAgBN,EAAKE,QAAQC,KAAKI,MAAM,GAAGC,QAAQC,oBAAoB,GACvE3B,EAAekB,EAAKE,QAAQC,KAAKI,MAAM,GAAGG,OAE9C,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAeC,SAAUC,MACzB,kBAACC,EAAA,EAAD,KACGd,EAAQ,kBAACe,EAAA,EAAD,CAAcC,UAAWhB,IAAY,KAC7CG,EAAKd,OAAS,kBAAC4B,EAAA,EAAD,CAAaC,SAAUf,IAAW,MAEjD,kBAACW,EAAA,EAAD,KACCT,EAAgB,kBAACU,EAAA,EAAD,CAAcC,UAAWX,IAAoB,KAC7DxB,EAAaQ,OAAS,kBAAC,EAAD,CAAiBR,aAAcA,IAAmB,MAE3E,kBAACsC,EAAA,EAAD,QAMOrB,a,qBCzEfsB,EAAOC,QAAU,IAA0B,iD,uHCKrCC,EAAgBhD,IAAOC,IAAV,6EAAGD,CAAH,yBAIbiD,EAAYjD,IAAOC,IAAV,yEAAGD,CAAH,sBAIF2C,EAAc,SAAC,GAAkB,IACxCO,EADuC,EAAfN,SACFpC,KAAI,SAAAQ,GAAS,OACvC,kBAACiC,EAAD,KACE,6BACE,kBAACvC,EAAA,EAAD,CAAUC,QAASK,SAIvB,OACE,kBAACgC,EAAD,KACGE","file":"component---src-pages-submissions-js-12d0dbd5a925c28f3efb.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\n\nimport { RichText } from '../RichText';\n\nexport const ProjectsContainer = styled.div`\n  @media (min-width: 950px) {\n    display: flex;\n    justify-content: start;\n    flex-wrap: wrap;\n    margin: 20px auto;\n  }\n  margin: 20px 0;\n  padding: 0 20px;\n\n`;\n\nexport const Project = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    max-width: 800px;\n    margin: 8px auto 30px;\n    padding: 40px 20px;\n    background-color: rgba(194,176,145,0.2);\n    border-radius: 10px;\n    @media (min-width: 950px) {\n      margin: 8px 20px 30px 20px;\n      width: 340px;\n    }\n`;\n\nexport const StyledVideo = styled.iframe`\n  margin-top: 10px;\n  border: none;\n`;\n\nexport const ProjectsSection = ({ projectsData }) => {\n\n  const projects = projectsData.map(project =>\n    <Project>\n      <RichText content={project.researcher_name[0]} />\n      {project.project_date &&\n        <RichText content={project.project_date[0]} />\n      }\n      {project.project_description.length &&\n        project.project_description.map(paragraph => <RichText content={paragraph} />)\n       }\n       {project.video_url && \n         <StyledVideo \n          width=\"100%\" \n          height=\"300\"\n          src={project.video_url} \n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n          allowfullscreen\n         />\n       }\n    </Project>);\n\n  return(\n      <ProjectsContainer>\n        {projects}\n      </ProjectsContainer>\n  );\n};\n\nexport default ProjectsSection;\n\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport image from '../images/4.png';\n\nimport { TitleSection } from '../components/TitleSection';\nimport { TextSection } from '../components/TextSection';\nimport { PageContent } from '../components/PageContent';\nimport { HeaderSection } from '../components/HeaderSection';\nimport { Navbar } from '../components/Navbar';\nimport { ProjectsSection } from '../components/ProjectsSection/ProjectsSection';\nimport { Footer } from '../components/Footer';\n\nexport const query = graphql`\n{\n  prismic {\n    page(lang: \"en-gb\", uid: \"submissions\") {\n      quote\n      page_text\n      title\n      _meta {\n        uid\n      }\n      body1 {\n        ... on PRISMIC_PageBody1Info_card {\n          type\n          fields {\n            card_text\n          }\n        }\n        ... on PRISMIC_PageBody1Past_projects {\n          type\n          label\n          primary {\n            past_projects_title\n          }\n          fields {\n            project_date\n            project_description\n            researcher_name\n            video_url\n          }\n        }\n      }\n      image\n    }\n  }\n}\n`\n\nexport const SubmissionsPage = ({ data }) => {\n  const title = data.prismic.page.title[0];\n  const text = data.prismic.page.page_text\n  const projectsTitle = data.prismic.page.body1[0].primary.past_projects_title[0]\n  const projectsData = data.prismic.page.body1[0].fields\n\n    return (\n      <div>\n        <Navbar />\n        <HeaderSection imageSrc={image}/>\n        <PageContent>\n          {title ? <TitleSection titleData={title} /> : null}\n          {text.length ? <TextSection textData={text} /> : null}\n          </PageContent>\n          <PageContent>\n          {projectsTitle ? <TitleSection titleData={projectsTitle} /> : null}\n          {projectsData.length ? <ProjectsSection projectsData={projectsData} /> : null}\n        </PageContent>\n        <Footer/>\n      </div>\n        \n    )\n}\n\nexport default SubmissionsPage;","module.exports = __webpack_public_path__ + \"static/4-7597abd1c204205bd466e3e269eb87bf.png\";","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { RichText } from '../RichText';\n\nconst TextContainer = styled.div`\n    margin: 20px 0 50px; \n`;\n\nconst Paragraph = styled.div`\n    margin: 0 0 20px;\n`;\n\nexport const TextSection = ({ textData }) => {\nconst paragraphs = textData.map(paragraph => \n  <Paragraph>\n    <div> \n      <RichText content={paragraph} />\n    </div>\n  </Paragraph>);\n\n  return(\n    <TextContainer>\n      {paragraphs}\n    </TextContainer>\n  );\n};\n\nexport default TextSection;\n"],"sourceRoot":""}