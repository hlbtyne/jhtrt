{"version":3,"sources":["webpack:///./src/components/LargeCardSection/LargeCardSection.js","webpack:///./src/components/ProjectsSection/ProjectsSection.js","webpack:///./src/pages/submissions.js","webpack:///./src/images/4.png","webpack:///./src/images/2.png","webpack:///./src/components/TextSection/TextSection.js"],"names":["LargeCardSectionContainer","styled","div","LargeCard","props","orange","CardContent","Spacer","StyledVideo","iframe","LargeCardSection","cards","map","card","video_url_large","width","height","src","allow","allowfullscreen","card_title","RichText","content","card_subheader","large_card_text","para","ProjectsContainer","Project","ProjectsSection","projects","projectsData","project","researcher_name","project_date","project_description","length","paragraph","video_url","query","SubmissionsPage","data","title","prismic","page","text","page_text","additionalTitle","additional_title","additionalText","additional_page_text","emailData","body1","fields","projectsTitle","primary","past_projects_title","covidProjectsTitle","large_card_title","covidProjectsData","Navbar","HeaderSection","imageSrc","image4","PageContent","TitleSection","titleData","TextSection","textData","image","Footer","module","exports","TextContainer","Paragraph","paragraphs"],"mappings":"8KAIaA,EAA4BC,IAAOC,IAAV,kGAAGD,CAAH,0HAWzBE,EAAYF,IAAOC,IAAV,kFAAGD,CAAH,mMAMA,SAAAG,GAAK,OACvBA,EAAMC,OAAS,QAAU,2BACjB,SAAAD,GAAK,OAAKA,EAAMC,OAAS,oBAAsB,QAO9CC,EAAcL,IAAOC,IAAV,oFAAGD,CAAH,uCAKXM,EAASN,IAAOC,IAAV,+EAAGD,CAAH,iBAINO,EAAcP,IAAOQ,OAAV,oFAAGR,CAAH,qDAMXS,EAAmB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAON,EAAa,EAAbA,OACxC,OACE,kBAACL,EAAD,KACGW,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAACV,EAAD,CAAWE,OAAQA,GAChBQ,EAAKC,iBACJ,kBAACN,EAAD,CACEO,MAAM,OACNC,OAAO,QACPC,IAAKJ,EAAKC,gBACVI,MAAM,0EACNC,iBAAe,IAGnB,kBAACb,EAAD,KACGO,EAAKO,WACJ,oCACE,kBAACC,EAAA,EAAD,CAAUC,QAAST,EAAKO,WAAW,KACnC,kBAACb,EAAD,OAEA,KACHM,EAAKU,eACJ,oCACE,kBAACF,EAAA,EAAD,CAAUC,QAAST,EAAKU,eAAe,KACvC,kBAAChB,EAAD,OAEA,KACHM,EAAKW,gBAAgBZ,KAAI,SAAAa,GAAI,OAC5B,kBAACJ,EAAA,EAAD,CAAUC,QAASG,e,sRCpEpBC,EAAoBzB,IAAOC,IAAV,yFAAGD,CAAH,iHAWjB0B,EAAU1B,IAAOC,IAAV,+EAAGD,CAAH,8NAcPO,EAAcP,IAAOQ,OAAV,mFAAGR,CAAH,kCAKX2B,EAAkB,SAAC,GAAsB,IAE9CC,EAF6C,EAAnBC,aAEFlB,KAAI,SAAAmB,GAAO,OACvC,kBAACJ,EAAD,KACE,kBAACN,EAAA,EAAD,CAAUC,QAASS,EAAQC,gBAAgB,KAC1CD,EAAQE,cACP,kBAACZ,EAAA,EAAD,CAAUC,QAASS,EAAQE,aAAa,KAEzCF,EAAQG,oBAAoBC,QAC3BJ,EAAQG,oBAAoBtB,KAAI,SAAAwB,GAAS,OAAI,kBAACf,EAAA,EAAD,CAAUC,QAASc,OAEhEL,EAAQM,WACP,kBAAC7B,EAAD,CACCO,MAAM,OACNC,OAAO,MACPC,IAAKc,EAAQM,UACbnB,MAAM,0EACNC,iBAAe,QAKvB,OACI,kBAACO,EAAD,KACGG,I,wBC7CIS,EAAK,0pCAsDLC,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BC,EAAQD,EAAKE,QAAQC,KAAKF,MAAM,GAChCG,EAAOJ,EAAKE,QAAQC,KAAKE,UACzBC,EAAkBN,EAAKE,QAAQC,KAAKI,iBAAiB,GACrDC,EAAiBR,EAAKE,QAAQC,KAAKM,qBAEnCC,EAAYV,EAAKE,QAAQC,KAAKQ,MAAM,GAAGC,OACvCC,EACJb,EAAKE,QAAQC,KAAKQ,MAAM,GAAGG,QAAQC,oBAAoB,GACnDC,EACJhB,EAAKE,QAAQC,KAAKQ,MAAM,GAAGG,QAAQG,iBAAiB,GAChD3B,EAAeU,EAAKE,QAAQC,KAAKQ,MAAM,GAAGC,OAC1CM,EAAoBlB,EAAKE,QAAQC,KAAKQ,MAAM,GAAGC,OAErD,OACE,6BACE,kBAACO,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAeC,SAAUC,MAEzB,kBAACC,EAAA,EAAD,KACGtB,EAAQ,kBAACuB,EAAA,EAAD,CAAcC,UAAWxB,IAAY,KAC7CG,EAAKT,OAAS,EAAI,kBAAC+B,EAAA,EAAD,CAAaC,SAAUvB,IAAW,KACpDM,EAAUf,OAAS,EAClB,kBAACzB,EAAA,EAAD,CAAkBL,QAAM,EAACM,MAAOuC,IAC9B,KACHJ,EAAkB,kBAACkB,EAAA,EAAD,CAAcC,UAAWnB,IAAsB,KACjEE,EAAeb,OAAS,EACvB,kBAAC+B,EAAA,EAAD,CAAaC,SAAUnB,IACrB,MAGN,kBAACY,EAAA,EAAD,CAAeC,SAAUO,MAEzB,kBAACL,EAAA,EAAD,KACGV,EAAgB,kBAACW,EAAA,EAAD,CAAcC,UAAWZ,IAAoB,KAC7DvB,EAAaK,OAAS,EACrB,kBAAC,EAAD,CAAiBL,aAAcA,IAC7B,KACH0B,EACC,kBAACQ,EAAA,EAAD,CAAcC,UAAWT,IACvB,KACHE,EAAkBvB,OAAS,EAC1B,kBAACzB,EAAA,EAAD,CAAkBC,MAAO+C,IACvB,MAGN,kBAACW,EAAA,EAAD,QAKS9B,a,qBCvHf+B,EAAOC,QAAU,IAA0B,iD,qBCA3CD,EAAOC,QAAU,IAA0B,iD,uHCKrCC,EAAgBvE,IAAOC,IAAV,gFAAGD,CAAH,yBAIbwE,EAAYxE,IAAOC,IAAV,4EAAGD,CAAH,sBAIFiE,EAAc,SAAC,GAAkB,IACxCQ,EADuC,EAAfP,SACFvD,KAAI,SAAAwB,GAAS,OACvC,kBAACqC,EAAD,KACE,6BACE,kBAACpD,EAAA,EAAD,CAAUC,QAASc,SAIvB,OACE,kBAACoC,EAAD,KACGE","file":"component---src-pages-submissions-js-5fa942f0238634e7fedf.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { RichText } from \"../RichText\"\n\nexport const LargeCardSectionContainer = styled.div`\n  @media (min-width: 600px) {\n    margin: 30px auto;\n  }\n  @media (min-width: 900px) {\n    margin: 30px auto;\n    max-width: 800px;\n  }\n  margin: 30px 0;\n`\n\nexport const LargeCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  margin: 0 auto 30px;\n  padding: 40px 20px;\n  background-color: ${props =>\n    props.orange ? \"white\" : \"rgba(194,176,145,0.2)\"};\n  border: ${props => (props.orange ? \"solid 3px #db5c1a\" : null)};\n  border-radius: 10px;\n  @media (min-width: 950px) {\n    margin: 8px 0 40px;\n  }\n`\n\nexport const CardContent = styled.div`\n  max-height: 250px;\n  overflow-y: auto;\n`\n\nexport const Spacer = styled.div`\n  height: 6px;\n`\n\nexport const StyledVideo = styled.iframe`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  border: none;\n`\n\nexport const LargeCardSection = ({ cards, orange }) => {\n  return (\n    <LargeCardSectionContainer>\n      {cards.map(card => (\n        <LargeCard orange={orange}>\n          {card.video_url_large && (\n            <StyledVideo\n              width=\"100%\"\n              height=\"400px\"\n              src={card.video_url_large}\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            />\n          )}\n          <CardContent>\n            {card.card_title ? (\n              <>\n                <RichText content={card.card_title[0]} />\n                <Spacer />\n              </>\n            ) : null}\n            {card.card_subheader ? (\n              <>\n                <RichText content={card.card_subheader[0]} />\n                <Spacer />\n              </>\n            ) : null}\n            {card.large_card_text.map(para => (\n              <RichText content={para} />\n            ))}\n          </CardContent>\n        </LargeCard>\n      ))}\n    </LargeCardSectionContainer>\n  )\n}\n\nexport default LargeCardSection\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { RichText } from '../RichText';\n\nexport const ProjectsContainer = styled.div`\n  @media (min-width: 950px) {\n    display: flex;\n    justify-content: start;\n    flex-wrap: wrap;\n    margin: 20px auto;\n  }\n  margin: 20px 0;\n\n`;\n\nexport const Project = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 8px auto 30px;\n    padding: 40px 20px;\n    background-color: rgba(194,176,145,0.2);\n    border-radius: 10px;\n    @media (min-width: 950px) {\n      margin: 8px 30px 30px 0;\n      width: 370px;\n    }\n`;\n\nexport const StyledVideo = styled.iframe`\n  margin-top: 10px;\n  border: none;\n`;\n\nexport const ProjectsSection = ({ projectsData }) => {\n\n  const projects = projectsData.map(project =>\n    <Project>\n      <RichText content={project.researcher_name[0]} />\n      {project.project_date &&\n        <RichText content={project.project_date[0]} />\n      }\n      {project.project_description.length &&\n        project.project_description.map(paragraph => <RichText content={paragraph} />)\n       }\n       {project.video_url && \n         <StyledVideo \n          width=\"100%\" \n          height=\"300\"\n          src={project.video_url} \n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n          allowfullscreen\n         />\n       }\n    </Project>);\n\n  return(\n      <ProjectsContainer>\n        {projects}\n      </ProjectsContainer>\n  );\n};\n\nexport default ProjectsSection;\n\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport image4 from \"../images/4.png\"\nimport image from \"../images/2.png\"\n\nimport { TitleSection } from \"../components/TitleSection\"\nimport { TextSection } from \"../components/TextSection\"\nimport { PageContent } from \"../components/PageContent\"\nimport { HeaderSection } from \"../components/HeaderSection\"\nimport { Navbar } from \"../components/Navbar\"\nimport { ProjectsSection } from \"../components/ProjectsSection/ProjectsSection\"\nimport { Footer } from \"../components/Footer\"\nimport { LargeCardSection } from \"../components/LargeCardSection\"\n\nexport const query = graphql`\n  {\n    prismic {\n      page(lang: \"en-gb\", uid: \"submissions\") {\n        quote\n        page_text\n        title\n        _meta {\n          uid\n        }\n        additional_page_text\n        additional_title\n        _meta {\n          uid\n        }\n        body1 {\n          ... on PRISMIC_PageBody1Info_card {\n            type\n            fields {\n              card_text\n              card_header\n            }\n          }\n          ... on PRISMIC_PageBody1Past_projects {\n            type\n            label\n            primary {\n              past_projects_title\n            }\n            fields {\n              project_date\n              project_description\n              researcher_name\n              video_url\n            }\n          }\n          ... on PRISMIC_PageBody1Large_info_card {\n            primary {\n              large_card_title\n            }\n            fields {\n              card_title\n              card_subheader\n              large_card_text\n              video_url_large\n            }\n          }\n        }\n        image\n      }\n    }\n  }\n`\n\nexport const SubmissionsPage = ({ data }) => {\n  const title = data.prismic.page.title[0]\n  const text = data.prismic.page.page_text\n  const additionalTitle = data.prismic.page.additional_title[0]\n  const additionalText = data.prismic.page.additional_page_text\n\n  const emailData = data.prismic.page.body1[0].fields\n  const projectsTitle =\n    data.prismic.page.body1[1].primary.past_projects_title[0]\n  const covidProjectsTitle =\n    data.prismic.page.body1[2].primary.large_card_title[0]\n  const projectsData = data.prismic.page.body1[1].fields\n  const covidProjectsData = data.prismic.page.body1[2].fields\n\n  return (\n    <div>\n      <Navbar />\n      <HeaderSection imageSrc={image4} />\n\n      <PageContent>\n        {title ? <TitleSection titleData={title} /> : null}\n        {text.length > 0 ? <TextSection textData={text} /> : null}\n        {emailData.length > 0 ? (\n          <LargeCardSection orange cards={emailData} />\n        ) : null}\n        {additionalTitle ? <TitleSection titleData={additionalTitle} /> : null}\n        {additionalText.length > 0 ? (\n          <TextSection textData={additionalText} />\n        ) : null}\n      </PageContent>\n\n      <HeaderSection imageSrc={image} />\n\n      <PageContent>\n        {projectsTitle ? <TitleSection titleData={projectsTitle} /> : null}\n        {projectsData.length > 0 ? (\n          <ProjectsSection projectsData={projectsData} />\n        ) : null}\n        {covidProjectsTitle ? (\n          <TitleSection titleData={covidProjectsTitle} />\n        ) : null}\n        {covidProjectsData.length > 0 ? (\n          <LargeCardSection cards={covidProjectsData} />\n        ) : null}\n      </PageContent>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default SubmissionsPage\n","module.exports = __webpack_public_path__ + \"static/4-7597abd1c204205bd466e3e269eb87bf.png\";","module.exports = __webpack_public_path__ + \"static/2-6c468acaa12983c243ad5b2dab42081f.png\";","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { RichText } from '../RichText';\n\nconst TextContainer = styled.div`\n    margin: 20px 0 50px; \n`;\n\nconst Paragraph = styled.div`\n    margin: 0 0 20px;\n`;\n\nexport const TextSection = ({ textData }) => {\nconst paragraphs = textData.map(paragraph => \n  <Paragraph>\n    <div> \n      <RichText content={paragraph} />\n    </div>\n  </Paragraph>);\n\n  return(\n    <TextContainer>\n      {paragraphs}\n    </TextContainer>\n  );\n};\n\nexport default TextSection;\n"],"sourceRoot":""}